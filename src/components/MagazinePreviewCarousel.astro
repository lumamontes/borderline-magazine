---
import { Image } from "astro:assets";

const { previewImages } = Astro.props;
---

<div class="max-w-4xl mx-auto mb-12">
  <div class="relative">
    <!-- Navigation Arrows -->
    <button 
      id="prev-btn" 
      class="absolute left-4 top-1/2 transform -translate-y-1/2 z-10 bg-white/80 hover:bg-white rounded-full p-2 shadow-lg transition-all duration-200 hover:scale-110"
      aria-label="Previous image"
    >
      <svg class="w-6 h-6 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
      </svg>
    </button>
    
    <button 
      id="next-btn" 
      class="absolute right-4 top-1/2 transform -translate-y-1/2 z-10 bg-white/80 hover:bg-white rounded-full p-2 shadow-lg transition-all duration-200 hover:scale-110"
      aria-label="Next image"
    >
      <svg class="w-6 h-6 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </button>

    <!-- Carousel Container -->
    <div class="overflow-hidden rounded-sm">
      <div 
        id="carousel-track" 
        class="flex transition-transform duration-300 ease-in-out"
        style="transform: translateX(0%)"
      >
        {previewImages.map((image: any, index: number) => (
          <div class="flex-shrink-0 w-full relative max-h-[400px]">
            <Image
              src={image}
              alt={`Magazine preview ${index + 1}`}
              class="w-full h-full object-contain"
              width={700}
              height={400}
              loading="lazy"
              format="webp"
            />
          </div>
        ))}
      </div>
    </div>

    <!-- Dots Indicator -->
    <div class="flex justify-center mt-4 space-x-2">
      {previewImages.map((_: any, index: number) => (
        <button
          class={`w-3 h-3 rounded-full transition-all duration-200 ${
            index === 0 ? 'bg-gray-800' : 'bg-gray-300 hover:bg-gray-500'
          }`}
          data-slide={index}
          aria-label={`Go to preview ${index + 1}`}
        ></button>
      ))}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const track = document.getElementById('carousel-track');
    const prevBtn = document.getElementById('prev-btn');
    const nextBtn = document.getElementById('next-btn');
    const dots = document.querySelectorAll('[data-slide]');
    
    if (!track || !prevBtn || !nextBtn) return;
    
    let currentIndex = 0;
    const totalImages = dots.length;
    
    function updateCarousel() {
      if (!track) return;
      
      const translateX = -currentIndex * 100;
      track.style.transform = `translateX(${translateX}%)`;
      
      // Update dots
      dots.forEach((dot, index) => {
        if (index === currentIndex) {
          dot.classList.remove('bg-gray-300', 'hover:bg-gray-500');
          dot.classList.add('bg-gray-800');
        } else {
          dot.classList.remove('bg-gray-800');
          dot.classList.add('bg-gray-300', 'hover:bg-gray-500');
        }
      });
    }
    
    function nextSlide() {
      currentIndex = (currentIndex + 1) % totalImages;
      updateCarousel();
    }
    
    function prevSlide() {
      currentIndex = (currentIndex - 1 + totalImages) % totalImages;
      updateCarousel();
    }
    
    // Event listeners
    nextBtn.addEventListener('click', nextSlide);
    prevBtn.addEventListener('click', prevSlide);
    
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        currentIndex = index;
        updateCarousel();
      });
    });
    
    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') prevSlide();
      if (e.key === 'ArrowRight') nextSlide();
    });
  });
</script>

<style>
  /* Ensure smooth transitions */
  #carousel-track {
    will-change: transform;
  }
  
  /* Hide scrollbar for carousel */
  .overflow-hidden {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }
  
  .overflow-hidden::-webkit-scrollbar {
    display: none;
  }
</style>
