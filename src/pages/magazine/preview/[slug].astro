---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import Header from "../../../components/Header.astro";
import LayoutHeader from "../../../layouts/LayoutHeader.astro";
import MagazineFlipbook from "../../../components/MagazineFlipbook.tsx";
import { getMagazineColorPalette } from "../../../lib/imageColors.ts";

export async function getStaticPaths() {
  const magazines = await getCollection("magazines");
  return magazines.filter((magazine) => magazine.data.display && magazine.data.featured).map((magazine) => ({
    params: { slug: magazine.slug },
    props: { magazine },
  }));
}

const { magazine } = Astro.props;
const { Content } = await magazine.render();

// Import all magazine preview images using Vite's import.meta.glob
const allMagazineImages = import.meta.glob<{ default: ImageMetadata }>('../../../assets/magazines/**/*.{png,jpg,jpeg,gif,webp}', { eager: true });

// Get cover image
const coverImagePath = magazine.data.coverImage.replace('/src/assets/', '../../../assets/');
const coverImage = allMagazineImages[coverImagePath]?.default;

// Get all page images for this specific magazine
const pagesDirPath = magazine.data.pagesDir?.replace('/src/assets/', '../../../assets/');
const pageImages = Object.values(allMagazineImages)
  .filter((img) => {
    const imgPath = Object.keys(allMagazineImages).find(key => allMagazineImages[key] === img);
    return imgPath && imgPath.includes(pagesDirPath || 'assets/magazines/');
  })
  .map((img) => ({ src: img.default.src, alt: `${magazine.data.title} page` }));

console.log('Preview - Magazine pagesDir:', magazine.data.pagesDir);
console.log('Preview - Converted pagesDirPath:', pagesDirPath);
console.log('Preview - All magazine image keys:', Object.keys(allMagazineImages));
console.log('Preview - Filtered page images:', pageImages);

// Get color palette for this magazine
const colorPalette = getMagazineColorPalette(magazine);

// SEO data
const seoTitle = `${magazine.data.title} - Full Preview | Borderline Litmag`;
const seoDescription = `Read the complete digital preview of ${magazine.data.title}. ${magazine.data.description}`;
const baseURL = Astro.site || "https://borderlinemag.netlify.app";
const canonicalURL = new URL(`/magazine/preview/${magazine.slug}`, baseURL);

// Structured data for full magazine preview
const structuredData = {
  "@context": "https://schema.org",
  "@type": "CreativeWork",
  "name": `${magazine.data.title} - Full Preview`,
  "description": seoDescription,
  "url": canonicalURL.toString(),
  "datePublished": magazine.data.publishDate.toISOString(),
  "inLanguage": "en",
  "genre": "Literary Magazine",
  "keywords": magazine.data.tags.join(", "),
  "isPartOf": {
    "@type": "CollectionPage",
    "name": "Borderline Litmag Magazine Collection",
    "url": new URL("/magazine", baseURL).toString()
  }
};
---

<!-- SEO Meta Tags -->
<title>{seoTitle}</title>
<meta name="description" content={seoDescription} />
<meta name="keywords" content={magazine.data.tags.join(", ")} />
<link rel="canonical" href={canonicalURL.toString()} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="article" />
<meta property="og:url" content={canonicalURL.toString()} />
<meta property="og:title" content={seoTitle} />
<meta property="og:description" content={seoDescription} />
<meta property="og:image" content={new URL(magazine.data.coverImage, baseURL).toString()} />
<meta property="article:published_time" content={magazine.data.publishDate.toISOString()} />
<meta property="article:author" content="Borderline Litmag" />
<meta property="article:section" content="Literature" />
{magazine.data.tags.map(tag => (
  <meta property="article:tag" content={tag} />
))}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL.toString()} />
<meta property="twitter:title" content={seoTitle} />
<meta property="twitter:description" content={seoDescription} />
<meta property="twitter:image" content={new URL(magazine.data.coverImage, baseURL).toString()} />

<!-- Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(structuredData)} />

<LayoutHeader>
  
  <Header />
  
  <!-- Breadcrumb -->
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-8" aria-label="Breadcrumb">
    <ol class="flex items-center space-x-2 text-sm text-gray-500">
      <li><a href="/" class="hover:text-gray-700">Home</a></li>
      <li>/</li>
      <li><a href="/magazine" class="hover:text-gray-700">Magazine</a></li>
      <li>/</li>
      <li><a href={`/magazine/${magazine.slug}`} class="hover:text-gray-700">{magazine.data.title}</a></li>
      <li>/</li>
      <li class="text-gray-900">Full Preview</li>
    </ol>
  </nav>

  <!-- Full Magazine Preview Header -->
  <section class="relative overflow-hidden">
    <!-- Blurred background from cover image -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-16 pb-8">
      <div class="text-center">
        <h1 class="text-3xl sm:text-4xl md:text-5xl font-bold mb-4 leading-tight text-gray-900 inknut-antiqua-bold">
          {magazine.data.title}
        </h1>
        <div class="flex justify-center gap-4 mb-8">
          <a 
            href={`/magazine/${magazine.slug}`}
            class="inline-flex items-center px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors"
          >
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            Back 
          </a>
          <div class="text-sm text-gray-500 flex items-center">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
            </svg>
            {pageImages.length} pages
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Full Magazine Flipbook -->
  {pageImages.length > 0 ? (
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-16">
      <MagazineFlipbook 
        pageImages={pageImages}
        title={`${magazine.data.title} - Complete Digital Edition`}
        isPreview={false}
        colorPalette={colorPalette}
        coverImage={coverImage?.src || magazine.data.coverImage}
        client:load
      />
    </div>
  ) : (
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-16">
      <div class="text-center py-16">
        <div class="text-gray-400 mb-4">
          <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-gray-600 mb-2">No Preview Available</h3>
        <p class="text-gray-500 mb-6">This magazine doesn't have a digital preview yet.</p>
        <a 
          href={`/magazine/${magazine.slug}`}
          class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
        >
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          Back
        </a>
      </div>
    </div>
  )}

</LayoutHeader>
